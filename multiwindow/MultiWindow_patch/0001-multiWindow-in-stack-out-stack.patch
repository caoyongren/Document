From 665442b36b1327d482dae83c4deab58d85bd17f1 Mon Sep 17 00:00:00 2001
From: CaoYongren <m18410261910@163.com>
Date: Thu, 13 Apr 2017 10:08:17 +0000
Subject: [PATCH] multiWindow in stack out stack.

Signed-off-by: CaoYongren <m18410261910@163.com>
---
 .../android/server/am/ActivityStackSupervisor.java | 52 +++++++++++++++++++++-
 1 file changed, 51 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/am/ActivityStackSupervisor.java b/services/core/java/com/android/server/am/ActivityStackSupervisor.java
index 198dceb..b98f080 100644
--- a/services/core/java/com/android/server/am/ActivityStackSupervisor.java
+++ b/services/core/java/com/android/server/am/ActivityStackSupervisor.java
@@ -1184,6 +1184,17 @@ public final class ActivityStackSupervisor implements DisplayListener {
                     ? new ProfilerInfo(profileFile, profileFd, mService.mSamplingInterval,
                     mService.mAutoStopProfiler) : null;
             app.forceProcessStateUpTo(ActivityManager.PROCESS_STATE_TOP);
+//Matthew
+            /**
+             * Date: Mar 25, 2014
+             * Copyright (C) 2014 Tieto Poland Sp. z o.o.
+             *
+             * If first activity in task was launch on external display, than
+             * all activities in task should be run on external display. The
+             * same rule is use for activities launched in window.
+             */
+            r.intent.addFlags(r.task.intent.getFlags() & Intent.FLAG_ACTIVITY_RUN_ON_EXTERNAL_DISPLAY);
+            r.intent.addFlags(r.task.intent.getFlags() & Intent.FLAG_ACTIVITY_RUN_IN_WINDOW);
             app.thread.scheduleLaunchActivity(new Intent(r.intent), r.appToken,
                     System.identityHashCode(r), r.info, new Configuration(mService.mConfiguration),
                     r.compat, r.launchedFromPackage, r.task.voiceInteractor, app.repProcState,
@@ -1577,6 +1588,44 @@ public final class ActivityStackSupervisor implements DisplayListener {
                 }
             }
 */
+            int parentStackId = HOME_STACK_ID;
+            int intentFlags = 0;
+
+            // FIXME: mContext is not merged into 5.1 originally.
+            boolean multiwindowEnabled = Settings.System.getInt(mService.mContext.getContentResolver(),
+                    TIETO_MULTIWINDOW_ENABLED, 0) != 0;
+            if (multiwindowEnabled && (r.intent != null)) {
+                r.intent.addFlags(Intent.FLAG_ACTIVITY_RUN_IN_WINDOW);
+            }
+
+            intentFlags = (r.intent != null) ? r.intent.getFlags() : 0;
+            boolean isMultiwindow = (intentFlags & Intent.FLAG_ACTIVITY_RUN_IN_WINDOW) != 0;
+            if (!isMultiwindow) {
+                final ActivityContainer container = r.mInitialActivityContainer;
+                if (container != null) {
+                    // The first time put it on the desired stack, after this put on task stack.
+                    r.mInitialActivityContainer = null;
+                    return container.mStack;
+                }
+
+                if (mFocusedStack != mHomeStack && (!newTask ||
+                        mFocusedStack.mActivityContainer.isEligibleForNewTasks())) {
+                    if (DEBUG_FOCUS || DEBUG_STACK) Slog.d(TAG,
+                            "adjustStackFocus: Have a focused stack=" + mFocusedStack);
+                    return mFocusedStack;
+                }
+
+                final ArrayList<ActivityStack> homeDisplayStacks = mHomeStack.mStacks;
+                for (int stackNdx = homeDisplayStacks.size() - 1; stackNdx >= 0; --stackNdx) {
+                    final ActivityStack stack = homeDisplayStacks.get(stackNdx);
+                    if (!stack.isHomeStack()) {
+                        if (DEBUG_FOCUS || DEBUG_STACK) Slog.d(TAG,
+                                "adjustStackFocus: Setting focused stack=" + stack);
+                        mFocusedStack = stack;
+                        return mFocusedStack;
+                    }
+                }
+            }
 
             // Need to create an app stack for this user.
             int stackId = createStackOnDisplay(getNextStackId(), Display.DEFAULT_DISPLAY);
@@ -1584,6 +1633,7 @@ public final class ActivityStackSupervisor implements DisplayListener {
             if (DEBUG_FOCUS || DEBUG_STACK) Slog.d(TAG, "adjustStackFocus: New stack r=" + r +
                     " stackId=" + stackId);
             mFocusedStack = getStack(stackId);
+            mFocusedStack.setMultiwindowStack(isMultiwindow);
             return mFocusedStack;
         }
         return mHomeStack;
@@ -3719,7 +3769,7 @@ public final class ActivityStackSupervisor implements DisplayListener {
             mStack.mStacks = activityDisplay.mStacks;
 
             activityDisplay.attachActivities(mStack);
-            mWindowManager.attachStack(mStackId, activityDisplay.mDisplayId);
+            mWindowManager.attachStack(mStackId, activityDisplay.mDisplayId);//Matthew
         }
 
         @Override
-- 
1.9.1

